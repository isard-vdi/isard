{
  "components": {
    "schemas": {
      "NotImplementedResponse.0bf6af6": {
        "properties": {
          "error": {
            "default": "This endpoint is not implemented yet. Please check back later.",
            "title": "Error",
            "type": "string"
          }
        },
        "title": "NotImplementedResponse",
        "type": "object"
      },
      "NotifyDeleteGPUMailRequest.0bf6af6": {
        "properties": {
          "bookings": {
            "items": {

            },
            "title": "Bookings",
            "type": "array"
          },
          "deployments": {
            "items": {

            },
            "title": "Deployments",
            "type": "array"
          },
          "desktops": {
            "items": {

            },
            "title": "Desktops",
            "type": "array"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "bookings",
          "desktops",
          "deployments",
          "text"
        ],
        "title": "NotifyDeleteGPUMailRequest",
        "type": "object"
      },
      "NotifyDeleteGPUMailResponse.0bf6af6": {
        "properties": {

        },
        "title": "NotifyDeleteGPUMailResponse",
        "type": "object"
      },
      "NotifyEmailVerifyMailRequest.0bf6af6": {
        "properties": {
          "email": {
            "title": "Email",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "email",
          "url"
        ],
        "title": "NotifyEmailVerifyMailRequest",
        "type": "object"
      },
      "NotifyEmailVerifyMailResponse.0bf6af6": {
        "properties": {
          "task_id": {
            "format": "uuid",
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "title": "NotifyEmailVerifyMailResponse",
        "type": "object"
      },
      "NotifyFrontendDesktopTimeLimitRequest.0bf6af6": {
        "properties": {
          "desktop_name": {
            "title": "Desktop Name",
            "type": "string"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "desktop_name",
          "timestamp"
        ],
        "title": "NotifyFrontendDesktopTimeLimitRequest",
        "type": "object"
      },
      "NotifyFrontendDesktopTimeLimitResponse.0bf6af6": {
        "properties": {

        },
        "title": "NotifyFrontendDesktopTimeLimitResponse",
        "type": "object"
      },
      "NotifyFrontendRequest.0bf6af6": {
        "properties": {
          "level": {
            "$ref": "#/components/schemas/NotifyFrontendRequest.0bf6af6.NotifyFrontendRequestLevel"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "level",
          "message"
        ],
        "title": "NotifyFrontendRequest",
        "type": "object"
      },
      "NotifyFrontendRequest.0bf6af6.NotifyFrontendRequestLevel": {
        "enum": [
          "unspecified",
          "success",
          "warning",
          "danger",
          "info"
        ],
        "title": "NotifyFrontendRequestLevel",
        "type": "string"
      },
      "NotifyFrontendResponse.0bf6af6": {
        "properties": {

        },
        "title": "NotifyFrontendResponse",
        "type": "object"
      },
      "NotifyFrontendSearchingResourcesRequest.0bf6af6": {
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id"
        ],
        "title": "NotifyFrontendSearchingResourcesRequest",
        "type": "object"
      },
      "NotifyFrontendSearchingResourcesResponse.0bf6af6": {
        "properties": {

        },
        "title": "NotifyFrontendSearchingResourcesResponse",
        "type": "object"
      },
      "NotifyGuestRequest.0bf6af6": {
        "properties": {
          "desktop_id": {
            "title": "Desktop Id",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "desktop_id",
          "message"
        ],
        "title": "NotifyGuestRequest",
        "type": "object"
      },
      "NotifyGuestResponse.0bf6af6": {
        "properties": {

        },
        "title": "NotifyGuestResponse",
        "type": "object"
      },
      "NotifyMailRequest.0bf6af6": {
        "properties": {
          "subject": {
            "title": "Subject",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "subject",
          "text"
        ],
        "title": "NotifyMailRequest",
        "type": "object"
      },
      "NotifyMailResponse.0bf6af6": {
        "properties": {
          "task_id": {
            "format": "uuid",
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "title": "NotifyMailResponse",
        "type": "object"
      },
      "NotifyPasswordResetMailRequest.0bf6af6": {
        "properties": {
          "category": {
            "title": "Category",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "category",
          "email",
          "url"
        ],
        "title": "NotifyPasswordResetMailRequest",
        "type": "object"
      },
      "NotifyPasswordResetMailResponse.0bf6af6": {
        "properties": {
          "task_id": {
            "format": "uuid",
            "title": "Task Id",
            "type": "string"
          }
        },
        "required": [
          "task_id"
        ],
        "title": "NotifyPasswordResetMailResponse",
        "type": "object"
      },
      "ValidationError.6a07bef": {
        "description": "Model of a validation error response.",
        "items": {
          "$ref": "#/components/schemas/ValidationError.6a07bef.ValidationErrorElement"
        },
        "title": "ValidationError",
        "type": "array"
      },
      "ValidationError.6a07bef.ValidationErrorElement": {
        "description": "Model of a validation error response element.",
        "properties": {
          "ctx": {
            "title": "Error context",
            "type": "object"
          },
          "loc": {
            "items": {
              "type": "string"
            },
            "title": "Missing field name",
            "type": "array"
          },
          "msg": {
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationErrorElement",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Notifier API. Used only through internal microservices.",
    "version": "v1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/notifier/frontend": {
      "post": {
        "description": "",
        "operationId": "post__notifier_frontend",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyFrontendRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyFrontendResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplementedResponse.0bf6af6"
                }
              }
            },
            "description": "Not Implemented"
          }
        },
        "summary": "NotifyFrontend sends a popup notification to the user webpage interface",
        "tags": [
          "Not implemented"
        ]
      }
    },
    "/notifier/frontend/desktop-time-limit": {
      "post": {
        "description": "",
        "operationId": "post__notifier_frontend_desktop-time-limit",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyFrontendDesktopTimeLimitRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyFrontendDesktopTimeLimitResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplementedResponse.0bf6af6"
                }
              }
            },
            "description": "Not Implemented"
          }
        },
        "summary": "NotifyFrontendDesktopTimeLimit notifies the user that the time limit is approaching",
        "tags": [
          "Not implemented"
        ]
      }
    },
    "/notifier/frontend/searching-resources": {
      "post": {
        "description": "",
        "operationId": "post__notifier_frontend_searching-resources",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyFrontendSearchingResourcesRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyFrontendSearchingResourcesResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplementedResponse.0bf6af6"
                }
              }
            },
            "description": "Not Implemented"
          }
        },
        "summary": "NotifyFrontendSearchingResources notifies the user that there are no resources available and will be in a near future",
        "tags": [
          "Not implemented"
        ]
      }
    },
    "/notifier/guest": {
      "post": {
        "description": "",
        "operationId": "post__notifier_guest",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyGuestRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyGuestResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotImplementedResponse.0bf6af6"
                }
              }
            },
            "description": "Not Implemented"
          }
        },
        "summary": "NotifyGuest sends a QMP notification to the user desktop",
        "tags": [
          "Not implemented"
        ]
      }
    },
    "/notifier/mail": {
      "post": {
        "description": "Email specifications in JSON: {     \"user_id\": \"User ID to be used to retrieve its email address\",     \"subject\": \"subject of the email that will be sent\",     \"text\": \"text of the email that will be sent\", } :param payload: Data from JWT :type payload: dict :return: Task ID :rtype: Set with Flask response values and data in JSON",
        "operationId": "post__notifier_mail",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyMailRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyMailResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          }
        },
        "summary": "Send an email to the user with the email specifications as JSON in body request.",
        "tags": [
          "Mail"
        ]
      }
    },
    "/notifier/mail/deleted-gpu": {
      "post": {
        "description": "Email specifications in JSON: {     \"user_id\": \"User ID to be used to retrieve its email address\",     \"bookings\": \"Booking list\",     \"desktops\": \"Desktop list\",     \"deployments\": \"Deployments list\" } :param payload: Data from JWT :type payload: dict :return: Task ID :rtype: Set with Flask response values and data in JSON",
        "operationId": "post__notifier_mail_deleted-gpu",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyDeleteGPUMailRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyDeleteGPUMailResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          }
        },
        "summary": "Send an email to notify the deletion of a GPU.",
        "tags": [
          "Gpu"
        ]
      }
    },
    "/notifier/mail/email-verify": {
      "post": {
        "description": "Email specifications in JSON: {     \"user_id\": \"User ID to be used to retrieve the email message\",     \"email\": \"email address where the mail will be sent\",     \"url\": \"url that will be sent to the user for email verification\", } :param payload: Data from JWT :type payload: dict :return: Task ID :rtype: Set with Flask response values and data in JSON",
        "operationId": "post__notifier_mail_email-verify",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyEmailVerifyMailRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyEmailVerifyMailResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          }
        },
        "summary": "Send an email to the user with the email specifications as JSON in body request.",
        "tags": [
          "Mail"
        ]
      }
    },
    "/notifier/mail/password-reset": {
      "post": {
        "description": "Email specifications in JSON: {     \"category\": \"category of the user\",     \"email\": \"email address where the mail will be sent\",     \"url\": \"url that will be sent to the user for password reset\", } :param payload: Data from JWT :type payload: dict :return: Task ID :rtype: Set with Flask response values and data in JSON",
        "operationId": "post__notifier_mail_password-reset",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyPasswordResetMailRequest.0bf6af6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotifyPasswordResetMailResponse.0bf6af6"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError.6a07bef"
                }
              }
            },
            "description": "Unprocessable Content"
          }
        },
        "summary": "Send an email to the user with the email specifications as JSON in body request.",
        "tags": [
          "Password",
          "Mail"
        ]
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "Mail"
    },
    {
      "name": "Password"
    },
    {
      "name": "Gpu"
    },
    {
      "name": "Not implemented"
    }
  ]
}