{
    "openapi": "3.0.0",
    "info": {
        "title": "Authentication API",
        "version": "v1.0"
    },
    "paths": {
        "/check": {
            "get": {
                "operationId": "Check",
                "summary": "Check if a login token is valid",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/providers": {
            "get": {
                "operationId": "Providers",
                "summary": "List all the available providers",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvidersResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": []
            }
        },
        "/login": {
            "post": {
                "operationId": "Login",
                "summary": "Login in to IsardVDI",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "provider",
                        "description": "The authentication provider that will be used",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Providers"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category_id",
                        "description": "The ID of the category that will be used to log in against",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "redirect",
                        "description": "The URL where the user will be redirected",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "cookie",
                        "name": "token",
                        "description": "Used for SAML authentication",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": false
                            },
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            }
                        },
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": false
                            }
                        }
                    },
                    "401": {
                        "description": "Login error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Login error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "headers": {
                            "Retry-After": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            }
                        },
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {},
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/external/user": {
            "post": {
                "operationId": "ExternalUser",
                "summary": "Create a isard user with an external identity provider",
                "description": "",
                "parameters": [
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalUserRequest"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Login external error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Login external error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserError"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalUserError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/callback": {
            "get": {
                "operationId": "Callback",
                "summary": "This method is used as a callback for external identity providers",
                "description": "",
                "parameters": [
                    {
                        "in": "query",
                        "name": "state",
                        "description": "This state has the callback JWT",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "description": "Used for OAuth2 callback",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "cookie",
                        "name": "token",
                        "description": "Used for SAML authentication",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            }
                        },
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Authorization": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": true
                            },
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string"
                                },
                                "required": false
                            }
                        }
                    }
                }
            }
        },
        "/renew": {
            "post": {
                "operationId": "Renew",
                "summary": "Renew the user session and obtain a new valid JWT",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RenewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RenewResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Session can't be renewed. It might have exceeded the renewal time, the max session time, or it might be revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RenewError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RenewError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "operationId": "Logout",
                "summary": "Close the session",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LogoutRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The session is invalid. It the token has probably expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/acknowledge-disclaimer": {
            "post": {
                "operationId": "AcknowledgeDisclaimer",
                "summary": "Acknowledge the IsardVDI disclaimer",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcknowledgeDisclaimerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcknowledgeDisclaimerResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcknowledgeDisclaimerError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcknowledgeDisclaimerError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcknowledgeDisclaimerError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/request-email-verification": {
            "post": {
                "operationId": "RequestEmailVerification",
                "summary": "Request an email verification",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestEmailVerificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already in use",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestEmailVerificationError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/verify-email": {
            "post": {
                "operationId": "VerifyEmail",
                "summary": "Verify the user email",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyEmailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyEmailError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyEmailError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyEmailError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/forgot-password": {
            "post": {
                "operationId": "ForgotPassword",
                "summary": "Request a password reset",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForgotPasswordError"
                                }
                            }
                        }
                    }
                },
                "tags": []
            }
        },
        "/reset-password": {
            "post": {
                "operationId": "ResetPassword",
                "summary": "Reset the user password",
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/migrate-user": {
            "post": {
                "operationId": "MigrateUser",
                "summary": "Request a token for user migration",
                "description": "Internal call from isard-api only. Users cannot call this endpoint",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MigrateUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MigrateUserResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MigrateUserError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MigrateUserError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MigrateUserError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api-key": {
            "put": {
                "operationId": "GenerateAPIKey",
                "summary": "Generate a API key for a specific user",
                "description": "An API key will be created for the user with a durability of 1 year",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateAPIKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateAPIKeyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateAPIKeyError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateAPIKeyError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateAPIKeyError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateAPIKeyError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/impersonate": {
            "post": {
                "operationId": "Impersonate",
                "summary": "Generate a token for a specific user",
                "description": "Only admins, managers or external apps can call this endpoint",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImpersonateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonateError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonateError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImpersonateError"
                                }
                            }
                        }
                    }
                },
                "tags": [],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Providers": {
                "type": "string",
                "enum": [
                    "form",
                    "saml",
                    "google"
                ]
            },
            "ProvidersResponse": {
                "properties": {
                    "providers": {
                        "title": "List of authentication providers available",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Providers"
                        }
                    }
                },
                "required": [
                    "providers"
                ],
                "type": "object"
            },
            "LoginRequest": {
                "properties": {
                    "username": {
                        "nullable": false,
                        "type": "string"
                    },
                    "password": {
                        "nullable": false,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "invalid_credentials",
                            "user_disabled",
                            "user_disallowed",
                            "rate_limit"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "CheckResponse": {
                "properties": {},
                "type": "object"
            },
            "CheckError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "RenewRequest": {
                "properties": {},
                "type": "object"
            },
            "RenewResponse": {
                "properties": {
                    "token": {
                        "title": "The renewed JWT token",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ],
                "type": "object"
            },
            "RenewError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_session",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "LogoutRequest": {
                "properties": {},
                "type": "object"
            },
            "LogoutResponse": {
                "properties": {
                    "redirect": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LogoutError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_session",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "AcknowledgeDisclaimerRequest": {
                "properties": {},
                "type": "object"
            },
            "AcknowledgeDisclaimerResponse": {
                "properties": {},
                "type": "object"
            },
            "AcknowledgeDisclaimerError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "RequestEmailVerificationRequest": {
                "properties": {
                    "email": {
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "type": "object"
            },
            "RequestEmailVerificationResponse": {
                "properties": {},
                "type": "object"
            },
            "RequestEmailVerificationError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "invalid_email",
                            "email_already_in_use",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "VerifyEmailRequest": {
                "properties": {},
                "type": "object"
            },
            "VerifyEmailResponse": {
                "properties": {},
                "type": "object"
            },
            "VerifyEmailError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "properties": {
                    "category_id": {
                        "nullable": false,
                        "type": "string"
                    },
                    "email": {
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "category_id",
                    "email"
                ],
                "type": "object"
            },
            "ForgotPasswordResponse": {
                "properties": {},
                "type": "object"
            },
            "ForgotPasswordError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server",
                            "user_not_found"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "ResetPasswordRequest": {
                "properties": {
                    "password": {
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ],
                "type": "object"
            },
            "ResetPasswordResponse": {
                "properties": {},
                "type": "object"
            },
            "ResetPasswordError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server",
                            "bad_request"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    },
                    "description_code": {
                        "title": "Error description code",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "bad_request",
                            "password_character_length",
                            "password_uppercase",
                            "password_lowercase",
                            "password_digits",
                            "password_special_characters",
                            "password_already_used",
                            "password_username"
                        ]
                    },
                    "params": {
                        "title": "Error extra parameters",
                        "nullable": false,
                        "type": "object",
                        "properties": {
                            "num": {
                                "title": "Number related with the description_code",
                                "nullable": false,
                                "type": "number"
                            }
                        }
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "MigrateUserRequest": {
                "properties": {
                    "user_id": {
                        "title": "The ID of the user to migrate",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "user_id"
                ],
                "type": "object"
            },
            "MigrateUserResponse": {
                "properties": {
                    "token": {
                        "title": "The migration JWT token",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ],
                "type": "object"
            },
            "MigrateUserError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "ExternalUserRequest": {
                "properties": {
                    "user_id": {
                        "title": "The ID of the user to create",
                        "nullable": false,
                        "type": "string"
                    },
                    "role_id": {
                        "title": "The ID of the role to assign to the user",
                        "nullable": false,
                        "type": "string"
                    },
                    "username": {
                        "title": "The username of the user to create",
                        "nullable": false,
                        "type": "string"
                    },
                    "name": {
                        "title": "The name of the user to create",
                        "nullable": false,
                        "type": "string"
                    },
                    "email": {
                        "title": "The email of the user to create",
                        "nullable": true,
                        "type": "string"
                    },
                    "photo": {
                        "title": "The photo of the user to create",
                        "nullable": true,
                        "type": "string"
                    }
                },
                "required": [
                    "user_id",
                    "role_id",
                    "username",
                    "name"
                ],
                "type": "object"
            },
            "ExternalUserError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server",
                            "bad_request",
                            "conflict"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    },
                    "params": {
                        "title": "Error extra parameters",
                        "nullable": false,
                        "type": "object",
                        "properties": {
                            "user_id": {
                                "title": "User ID related with the error",
                                "nullable": false,
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "ExternalUserResponse": {
                "properties": {
                    "user_id": {
                        "title": "The newly created user ID",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "user_id"
                ],
                "type": "object"
            },            "GenerateAPIKeyRequest": {
                "properties": {
                    "expiration_minutes": {
                        "title": "The amount of minutes before the API key expires",
                        "nullable": false,
                        "type": "integer"
                    }
                },
                "required": [
                    "expiration_minutes"
                ],
                "type": "object"
            },
            "GenerateAPIKeyResponse": {
                "properties": {
                    "api_key": {
                        "title": "The generated API key",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "api_key"
                ],
                "type": "object"
            },
            "GenerateAPIKeyError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "bad_request",
                            "missing_token",
                            "invalid_token",
                            "internal_server"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            },
            "ImpersonateRequest":{
                "properties": {
                    "user_id": {
                        "title": "The ID of the user to generate the token for",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "user_id"
                ],
                "type": "object"
            },
            "ImpersonateResponse": {
                "properties": {
                    "jwt": {
                        "title": "The generated JWT token",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "jwt"
                ],
                "type": "object"
            },
            "ImpersonateError": {
                "properties": {
                    "error": {
                        "title": "Error type",
                        "nullable": false,
                        "type": "string",
                        "enum": [
                            "missing_token",
                            "invalid_token",
                            "internal_server",
                            "bad_request",
                            "user_disabled"
                        ]
                    },
                    "msg": {
                        "title": "Error message",
                        "nullable": false,
                        "type": "string"
                    }
                },
                "required": [
                    "error",
                    "msg"
                ],
                "type": "object"
            }
        }
    },
    "security": [],
    "tags": []
}
