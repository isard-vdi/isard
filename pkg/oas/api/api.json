{
  "openapi": "3.0.0",
  "info": {
    "title": "IsardVDI API",
    "version": "3.1"
  },
  "paths": {
    "/api/v3/categories": {
      "get": {
        "operationId": "GetCategories",
        "summary": "List all the available categories for the user to login",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriesResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": []
      }
    },
    "/api/v3/category/{custom_url}": {
      "get": {
        "operationId": "GetCategory",
        "summary": "List all the available categories for the user to login",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "custom_url",
            "description": "The custom_url for the category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": []
      }
    },
    "/api/v3/login_config": {
      "get": {
        "operationId": "GetLoginConfig",
        "summary": "Get the configuration for the login page",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLoginConfigResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/v3/user": {
      "get": {
        "operationId": "GetUser",
        "summary": "Get the user data",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/user_migration/items": {
      "get": {
        "operationId": "GetUserMigrationItems",
        "summary": "Get items from the user that would be migrated",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserMigrationItemsResponse"
                }
              }
            }
          },
          "428": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserMigrationItemsError"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/user_migration/auto": {
      "post": {
        "operationId": "PostUserMigrationAuto",
        "summary": "Migrate the user items automatically",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Temporary response until WS are implemented in frontend",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserMigrationAutoResponse"
                }
              }
            }
          },
          "428": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostUserMigrationAutoError"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/user/register": {
      "post": {
        "operationId": "RegisterUser",
        "summary": "Register a new user",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Session expired",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          },
          "404": {
            "description": "Code not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          },
          "409": {
            "description": "Invalid email domain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/maintenance": {
      "get": {
        "operationId": "GetMaintenance",
        "summary": "Check if maintenance is enabled globally or the user's category",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMaintenanceResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
            {
                "BearerAuth": []
            }
        ]
      }
    },
    "/api/v3/maintenance/status": {
      "get": {
        "operationId": "GetMaintenanceStatus",
        "summary": "Check if maintenance is enabled globally",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMaintenanceStatusResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": []
      }
    },
    "/api/v3/maintenance/text/frontend": {
      "get": {
        "operationId": "GetMaintenanceText",
        "summary": "List the custom maintenance text",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMaintenanceTextResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": []
      }
    },
    "/api/v3/notification/user/displays/{trigger}": {
      "get": {
        "operationId": "GetUserNotificationsDisplays",
        "summary": "Get the displays of the notifications for the user",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "trigger",
            "description": "The trigger for the notifications",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNotificationsDisplaysResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v3/notification/user/{trigger}/{display}": {
      "get": {
        "operationId": "GetUserNotifications",
        "summary": "Get the notifications for the user",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "trigger",
            "description": "The trigger for the notifications",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "display",
            "description": "The display for the notifications",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNotificationsResponse"
                }
              }
            }
          }
        },
        "tags": [],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Provider": {
        "type": "string",
        "enum": ["local", "ldap", "saml", "google", "external"]
      },
      "Role": {
        "type": "string",
        "enum": ["admin", "manager", "advanced", "user"],
        "title": "Role of the IsardVDI system"
      },
      "GetCategoriesResponse": {
        "type": "array",
        "title": "List of the categories",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "title": "The ID of the category"
            },
            "name": {
              "type": "string",
              "title": "The name of the category"
            },
            "frontend": {
              "type": "boolean",
              "title": "Whether to show this on the frontend dropdown"
            },
            "custom_url_name": {
              "type": "string",
              "title": "An URL friendly name for the category"
            }
          },
          "required": [
            "id",
            "name",
            "frontend"
          ]
        }
      },
      "GetCategoryResponse": {
        "type": "object",
        "title": "Category data",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID of the category"
          },
          "name": {
            "type": "string",
            "title": "The name of the category"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetLoginConfigResponse": {
        "type": "object",
        "title": "Configuration for the Login page",
        "properties": {
          "locale": {
            "type": "object",
            "title": "Config related with the locale selection",
            "properties": {
              "hide": {
                "type": "boolean",
                "title": "Whether to hide the locale switch"
              },
              "available_locales": {
                "type": "array",
                "title": "A list of the locales that will be available to the user",
                "items": {
                  "type": "string"
                }
              },
              "default": {
                "type": "string",
                "title": "The default locale that will be shown to the users"
              }
            }
          },
          "logo": {
            "type": "object",
            "title": "Config related with the logo",
            "properties": {
              "hide": {
                "type": "boolean",
                "title": "Whether to hide the logo"
              }
            }
          },
          "info": {
            "type": "object",
            "title": "Config realted with general information",
            "properties": {
              "title": {
                "type": "string",
                "title": "The title of the page"
              }
            }
          },
          "maintenance": {
            "type": "object",
            "title": "Config of the maintenance page",
            "properties": {
              "title": {
                "type": "string",
                "title": "The title of the maintenance page"
              },
              "description": {
                "type": "string",
                "title": "A small description (subtitle)"
              }
            }
          },
          "notification_cover": {
            "title": "Config of the notification that will be shown over the cover image",
            "$ref": "#/components/schemas/GetLoginConfigResponseNotification"
          },
          "notification_form": {
            "title": "Config of the notification that will be shown in the Login form",
            "$ref": "#/components/schemas/GetLoginConfigResponseNotification"
          },
          "providers": {
            "type": "object",
            "title": "Config related with the different authentication providers",
            "properties": {
              "all": {
                "type": "object",
                "title": "Config that will be applied to all the providers. A specific provider takes preference before this",
                "properties": {
                  "description": {
                    "type": "string",
                    "title": "A small description (subtitle)"
                  },
                  "hide_categories_dropdown": {
                    "type": "boolean",
                    "title": "Whether to hide the categories dropdown for all the providers"
                  },
                  "display_providers": {
                    "type": "array",
                    "title": "The providers that will be displayed in the /login page. If some provider is missing here, it can be accessed through /login/<provider>. If the provider is not enabled in isardvdi.cfg, it won't be displayed",
                    "items": {
                      "type": "string",
                      "enum": ["form", "saml", "google"]
                    }
                  }
                }
              },
              "form": {
                "$ref": "#/components/schemas/GetLoginConfigResponseProvider"
              },
              "saml": {
                "$ref": "#/components/schemas/GetLoginConfigResponseProvider"
              },
              "google": {
                "$ref": "#/components/schemas/GetLoginConfigResponseProvider"
              }
            }
          }
        }
      },
      "GetLoginConfigResponseNotification": {
        "type": "object",
        "title": "Config of the notification that will be shown",
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Whether the notification is enabled"
          },
          "icon": {
            "type": "string",
            "title": "The icon that the notification will have"
          },
          "title": {
            "type": "string",
            "title": "The title of the maintenance page"
          },
          "description": {
            "type": "string",
            "title": "A small description (subtitle)"
          },
          "button": {
            "type": "object",
            "title": "Configuration related with the button",
            "properties": {
              "text": {
                "type": "string",
                "title": "The text of the button"
              },
              "url": {
                "type": "string",
                "title": "The URL that the button will redirect to"
              },
              "extra_styles": {
                "type": "string",
                "title": "Extra styles for the button. It will be added as `style=''` in the HTML"
              }
            },
            "required": [
              "text",
              "url"
            ]
          }
        }
      },
      "GetLoginConfigResponseProvider": {
        "type": "object",
        "title": "Config related with a specific provider",
        "properties": {
          "description": {
            "type": "string",
            "title": "A small description (subtitle)"
          },
          "hide_categories_dropdown": {
            "type": "boolean",
            "title": "Whether to hide the categories dropdown"
          },
          "hide_forgot_password": {
            "type": "boolean",
            "title": "Whether to hide the forgot password button"
          },
          "submit_icon": {
            "type": "string",
            "title": "Icon for the Submit button"
          },
          "submit_text": {
            "type": "string",
            "title": "The text that will appear in the submit button for the form"
          },
          "submit_extra_styles": {
            "type": "string",
            "title": "Extra styles for the submit button. It will be added as `style=''` in the HTML"
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "title": "Data related with the user",
        "properties": {
          "name": {
            "type": "string",
            "title": "The name of the user"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider",
            "title": "The provider of the user"
          },
          "role": {
            "$ref": "#/components/schemas/Role",
            "title": "The role of the user"
          },
          "role_name": {
            "type": "string",
            "title": "The name of the role of the user"
          },
          "category_name": {
            "type": "string",
            "title": "The name of the category of the user"
          },
          "group_name": {
            "type": "string",
            "title": "The name of the main group the user belongs to"
          }
        },
        "required": ["name", "role", "role_name", "category_name", "group_name"]
      },
      "GetUserMigrationItemsResponse": {
        "type": "object",
        "title": "List of the items that will be migrated",
        "properties": {
          "desktops": {
            "type": "array",
            "title": "List of the desktops that will be migrated",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "The ID of the desktop"
                },
                "name": {
                  "type": "string",
                  "title": "The name of the desktop"
                }
              },
              "required": ["id", "name"]
            }
          },
          "templates": {
            "type": "array",
            "title": "List of the templates that will be migrated",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "The ID of the template"
                },
                "name": {
                  "type": "string",
                  "title": "The name of the template"
                }
              },
              "required": ["id", "name"]
            }
          },
          "media": {
            "type": "array",
            "title": "List of the media that will be migrated",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "The ID of the media"
                },
                "name": {
                  "type": "string",
                  "title": "The name of the media"
                }
              },
              "required": ["id", "name"]
            }
          },
          "deployment": {
            "type": "array",
            "title": "List of the deployments that will be migrated",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "The ID of the deployment"
                },
                "name": {
                  "type": "string",
                  "title": "The name of the deployment"
                }
              },
              "required": ["id", "name"]
            }
          },
          "users": {
            "type": "array",
            "title": "List of the users that will be migrated",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "The ID of the user"
                },
                "name": {
                  "type": "string",
                  "title": "The name of the user"
                },
                "username": {
                  "type": "string",
                  "title": "The username of the user"
                },
                "provider": {
                  "type": "string",
                  "title": "The provider of the user"
                }
              },
              "required": ["id", "name", "username", "provider"]
            }
          },
          "quota_errors": {
            "type": "array",
            "title": "List of quota errors",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The error message"
                },
                "description_code": {
                  "type": "string",
                  "title": "The error code"
                }
              },
              "required": ["description", "description_code"]
            }
          },
          "origin_user_delete": {
            "type": "boolean",
            "title": "Whether the origin user will be deleted"
          }
        },
        "required": ["desktops", "templates", "media", "deployment", "users", "origin_user_delete"]
      },
      "GetUserMigrationItemsError": {
        "type": "object",
        "title": "Error response",
        "properties": {
          "errors": {
            "type": "array",
            "title": "List of the errors that make the migration not valid",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The error message"
                },
                "description_code": {
                  "type": "string",
                  "title": "The error code"
                }
              },
              "required": ["description", "description_code"]
            }
          }
        },
        "required": ["errors"]
      },
      "PostUserMigrationAutoResponse": {
        "type": "object",
        "title": "Temporary response until WS are implemented in frontend",
        "properties": {
          "migrated_desktops": {
            "type": "boolean",
            "title": "Whether the desktops have been migrated"
          },
          "desktops_error":{
            "type": "string",
            "title": "Error message if the desktops have not been migrated"
          },
          "migrated_templates": {
            "type": "boolean",
            "title": "Whether the templates have been migrated"
          },
          "templates_error":{
            "type": "string",
            "title": "Error message if the templates have not been migrated"
          },
          "migrated_media": {
            "type": "boolean",
            "title": "Whether the media have been migrated"
          },
          "media_error":{
            "type": "string",
            "title": "Error message if the media have not been migrated"
          },
          "migrated_deployments": {
            "type": "boolean",
            "title": "Whether the deployments have been migrated"
          },
          "deployments_error":{
            "type": "string",
            "title": "Error message if the deployments have not been migrated"
          },
          "rb_deleted": {
            "type": "boolean",
            "title": "Whether the recycle bin has been emptied"
          }
        }
      },
      "PostUserMigrationAutoError": {
        "type": "object",
        "title": "Error response",
        "properties": {
          "errors": {
            "type": "array",
            "title": "List of the errors that make the migration not valid",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "title": "The error message"
                },
                "description_code": {
                  "type": "string",
                  "title": "The error code"
                }
              }
            }
          }
        }
      },
      "RegisterUserRequest": {
        "type": "object",
        "title": "",
        "properties": {
          "code": {
            "type": "string",
            "title": "The group's registration code"
          }
        },
        "required": [
          "code"
        ]
      },
      "RegisterUserResponse": {
        "type": "object",
        "title": "New user id",
        "properties": {
          "id": {
            "type": "string",
            "title": "The ID of the new user"
          }
        },
        "required": [
          "id"
        ]
      },
      "RegisterError": {
        "properties": {
          "error": {
            "title": "Error type",
            "nullable": false,
            "type": "string",
            "enum": [
              "unauthorized",
              "forbidden",
              "not_found",
              "conflict",
              "rate_limit",
              "internal_server"
            ]
          },
          "msg": {
            "title": "Error message",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "error",
          "msg"
        ],
        "type": "object"
      },
      "GetMaintenanceResponse": {
        "type": "boolean",
        "title": "Maintenance status"
      },
      "GetMaintenanceStatusResponse": {
        "type": "boolean",
        "title": "Global maintenance status"
      },
      "GetMaintenanceTextResponse": {
        "type": "object",
        "title": "Maintenance text",
        "properties": {
          "title": {
            "type": "string",
            "title": "The custom title of the maintenance page"
          },
          "body": {
            "type": "string",
            "title": "The custom body of the maintenance page"
          },
          "enabled": {
            "type": "boolean",
            "title": "Whether the maintenance page is enabled"
          }
        },
        "required": ["title", "body", "enabled"]
      },
      "NotificationTemplate": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": ["body", "title"]
      },
      "NotificationItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vars": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "accessed": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": ["title", "body"]
          },
          "text": {
            "type": "string"
          }
        },
        "required": ["id"]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "action_id": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/NotificationTemplate"
          },
          "force_accept": {
            "type": "boolean"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationItem"
            }
          }
        },
        "required": ["action_id", "template_id", "template", "force_accept", "notifications"]
      },
      "GetUserNotificationsResponse": {
        "type": "object",
        "title": "Notification data",
        "properties": {
          "notifications": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                { "$ref": "#/components/schemas/Notification" }
              ]
            }
          }
        },
        "required": ["notifications"]
      },
      "GetUserNotificationsDisplaysResponse": {
        "type": "object",
        "title": "Notification display data",
        "properties": {
          "display": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "List of the displays that will be shown"
          }
        },
        "required": ["display"]
      }
    }
  },
  "security": [],
  "tags": []
}
