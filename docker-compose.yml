version: "3.5"
services:
  isard-database:
    container_name: isard-database
    volumes:
      - "/opt/isard/database:/data"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - isard_network
    image: rethinkdb
    restart: unless-stopped

  isard-nginx:
    container_name: isard-nginx
    volumes:
      - "/opt/isard/certs/default:/etc/nginx/external"
      - "/opt/isard/logs/nginx:/var/log/nginx"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - isard_network
    image: isard/nginx:${TAG:-latest}
    build:
      context: .
      dockerfile: dockers/nginx/Dockerfile    
    restart: unless-stopped
    depends_on:
      - isard-app

  isard-hypervisor:
    container_name: isard-hypervisor
    volumes:
      - "/opt/isard/sshkeys/$HOSTNAME:/root/.ssh"
      - "/opt/isard:/isard"
      - "/opt/isard/certs/default:/etc/pki/libvirt-spice"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "2022:22"
      - "5900-6199:5900-6199"
      - "6400-6699:6400-6699"
    networks:
      - isard_network
#      - default
#      - internet-vms
    image: isard/hypervisor:${TAG:-latest}
    build:
      context: .
      dockerfile: dockers/hypervisor/Dockerfile    
    env_file:
      - config.env
    privileged: true
    restart: unless-stopped

  isard-app:
    container_name: isard-app
    volumes:
      - "/opt/isard/sshkeys:/root/.ssh"
      - "/opt/isard/certs:/certs"
      - "/opt/isard/logs:/isard/logs"
      - "/opt/isard/database/wizard:/isard/install/wizard"
      - "/opt/isard/backups:/isard/backups"
      - "/opt/isard/uploads:/isard/uploads"
      - "/etc/localtime:/etc/localtime:ro"
    extra_hosts:
      - "isard-engine:127.0.0.1"
    networks:
      - isard_network
    image: isard/app:${TAG:-latest}
    build:
      context: .
      dockerfile: dockers/app/Dockerfile
      target: production
    restart: unless-stopped
    depends_on:
      - isard-database
      - isard-hypervisor

  isard-grafana:
    container_name: isard-grafana
    volumes:
      - "/opt/isard/grafana/grafana/data:/grafana/data"
      - "/opt/isard/grafana/graphite/storage:/opt/graphite/storage"
      - "/opt/isard/grafana/graphite/conf:/opt/graphite/conf"
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    networks:
      - isard_network
    image: isard/grafana:${TAG:-latest}
    build:
      context: .
      dockerfile: dockers/grafana/Dockerfile
    restart: unless-stopped
    env_file:
      - config.env

networks:
  isard_network:
    external: false
    name: isard_network
#  internet-vms:
#    driver: macvlan
#    driver_opts:
#      parent: viewers
#    ipam:
#      config:
#        - subnet: 172.30.0.0/16
