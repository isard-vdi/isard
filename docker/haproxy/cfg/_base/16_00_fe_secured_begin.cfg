### START 16_00_fe_secured_begin.cfg ###
frontend  fe_secured
  bind 0.0.0.0:443
  mode tcp
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }

  acl is_domain hdr_sub(Host) -i ${DOMAIN}
  tcp-request content capture req_ssl_sni len 150
  acl is_bastion_subdomain req_ssl_sni,map_end(/usr/local/etc/haproxy/bastion_domains/allowed.map) -m found
  use_backend be_subdomain if !is_domain is_bastion_subdomain


  # # Rate limiting for bastion subdomains using SNI
  # stick-table type string size 5k expire 5m store http_req_rate(${BASTION_HTTPS_RATE_LIMIT_WINDOW})
  # tcp-request content capture req_ssl_sni len 150
  # acl is_bastion_subdomain req_ssl_sni,map_end(/usr/local/etc/haproxy/bastion_domains/allowed.map) -m found
  # acl rate_limiting_enabled env(BASTION_HTTPS_RATE_LIMIT_ENABLED) -m str true
  # tcp-request content track-sc0 req_ssl_sni if is_bastion_subdomain rate_limiting_enabled
  # acl rate_limit_exceeded sc0_http_req_rate gt ${BASTION_HTTPS_RATE_LIMIT_THRESHOLD}
  # tcp-request content reject if is_bastion_subdomain rate_limit_exceeded rate_limiting_enabled


  default_backend be_ssl_backend

backend be_ssl_backend
  mode tcp
  server ssl_terminator 127.0.0.1:8443 

frontend  fe_ssl
  bind            0.0.0.0:8443 ssl crt /certs/chain.pem
  mode            http
  timeout         client   3600s
  maxconn         50000
  option          httpclose
  option          tcpka

  # BEGIN ACLs
  acl is_forbid_domain_ip env(FORBID_DOMAIN_IP) -m str true
  acl is_domain hdr(host) -m str "${DOMAIN}"
  acl is_blacklisted src -f /usr/local/etc/haproxy/lists/black.lst -f /usr/local/etc/haproxy/lists/external/black.lst
  acl is_whitelisted src -f /usr/local/etc/haproxy/lists/white.lst
  acl is_bad_path path_beg -i /. /BitKeeper
  # END ACLs

  # Blacklist & Whitelist
  http-request set-var(txn.block) str("BLACKLISTED") if is_blacklisted !is_whitelisted
  http-request reject if is_blacklisted !is_whitelisted

  # Allow only $DOMAIN accesses, not IP
  http-request set-var(txn.block) str("IP_ACCESS") if !is_domain is_forbid_domain_ip !is_whitelisted
  http-request reject if !is_domain is_forbid_domain_ip !is_whitelisted

  # Bad paths
  http-request set-var(txn.block) str("BAD PATH") if is_bad_path
  http-request reject if is_bad_path

  # Security Headers
  #https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html
  http-response del-header X-Powered-By
  http-response del-header Server
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
  http-response add-header X-Frame-Options DENY
  http-response add-header X-XSS-Protection 0
  # http-response set-header Content-Security-Policy:script-src https://<scripts domains> (only in devel)
  http-response add-header Referrer-Policy no-referrer
  http-response add-header X-Content-Type-Options nosniff

  # BEGIN CORS
  http-response add-header Access-Control-Allow-Origin "${CORS}"
  http-response add-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
  http-response add-header Access-Control-Max-Age 3628800
  http-response add-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE"
  # END CORS
### END 16_00_fe_secured_begin.cfg ###
