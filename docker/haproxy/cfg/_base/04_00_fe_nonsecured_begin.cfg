### START 04_fe_nonsecured_begin.cfg ###
frontend  fe_nonsecured
  bind 0.0.0.0:80
  mode tcp

  tcp-request inspect-delay 10s
  tcp-request content capture req.hdr(Host) len 150

  # Blacklist & Whitelist
  acl blacklisted src -f /usr/local/etc/haproxy/lists/black.lst -f /usr/local/etc/haproxy/lists/external/black.lst
  acl whitelisted src -f /usr/local/etc/haproxy/lists/white.lst
  tcp-request content set-var(txn.block) str("BLACKLISTED") if blacklisted !whitelisted !{ path_beg -i /.well-known/acme-challenge/ }
  tcp-request content reject if blacklisted !whitelisted !{ path_beg -i /.well-known/acme-challenge/ }

  # BACKEND isard-squid
  use_backend be_isard-squid if { method CONNECT }

  # Domain http traffic
  acl is_domain req.hdr(Host) -m str "${DOMAIN}"
  # acl is_subdomain hdr_sub(Host) -i end ".${DOMAIN}"
  acl is_subdomain req.hdr(Host),map_end(/usr/local/etc/haproxy/bastion_domains/allowed.map) -m found
  use_backend be_bastion_web if is_subdomain
  use_backend redirecthttps-backend if is_domain HTTP !{ path_beg -i /.well-known/acme-challenge/ }

  # Let's Encrypt challenge
  use_backend be_letsencrypt if is_domain { path_beg -i /.well-known/acme-challenge/ }

backend be_isard-squid
  mode tcp
  option redispatch
  option abortonclose
  server squid isard-squid:8080 check port 8080 inter 5s rise 2 fall 3 resolvers mydns init-addr none

backend be_bastion_web
  mode tcp
  server bastion isard-bastion:1313 check port 1313 inter 5s rise 2 fall 3 resolvers mydns init-addr none send-proxy-v2

backend be_bastion_ssh
  mode tcp
  option redispatch
  option abortonclose
  server bastion isard-bastion:1315 check port 1315 inter 5s rise 2 fall 3 resolvers mydns init-addr none send-proxy-v2
### END 04_fe_nonsecured_begin.cfg ###
